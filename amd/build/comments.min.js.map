{"version":3,"sources":["../src/comments.js"],"names":["define","$","ACTION","EXPAND_BUTTON","CONTRACT_BUTTON","Comments","region","node","find","on","onExpandButtonClick","bind","onContractButtonClick","prototype","e","cmid","currentTarget","data","comment","button_contract","hide","show","button_expand","initComments"],"mappings":"AAwBAA,OAAM,sBAAC,CACC,QADD,CAEC,UAFD,CAGC,WAHD,CAIC,gBAJD,CAAD,CAKC,SAAUC,CAAV,CAAmC,CAClC,aAKA,GAAIC,CAAAA,CAAM,CAAG,CACTC,aAAa,CAAE,0BADN,CAETC,eAAe,CAAE,4BAFR,CAAb,CASA,QAASC,CAAAA,CAAT,CAAkBC,CAAlB,CAA0B,CACtB,KAAKC,IAAL,CAAYN,CAAC,CAACK,CAAD,CAAb,CACA,KAAKC,IAAL,CAAUC,IAAV,CAAeN,CAAM,CAACC,aAAtB,EAAqCM,EAArC,CAAwC,OAAxC,CAAiD,KAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAAjD,EACA,KAAKJ,IAAL,CAAUC,IAAV,CAAeN,CAAM,CAACE,eAAtB,EAAuCK,EAAvC,CAA0C,OAA1C,CAAmD,KAAKG,qBAAL,CAA2BD,IAA3B,CAAgC,IAAhC,CAAnD,CACH,CAEDN,CAAQ,CAACQ,SAAT,CAAmBH,mBAAnB,CAAyC,SAAUI,CAAV,CAAa,IAC5CC,CAAAA,CAAI,CAAGd,CAAC,CAACa,CAAC,CAACE,aAAH,CAAD,CAAmBC,IAAnB,CAAwB,SAAxB,CADqC,CAE5CC,CAAO,CAAG,KAAKX,IAAL,CAAUC,IAAV,CAAe,4BAA6BO,CAA7B,CAAoC,KAAnD,CAFkC,CAG5CI,CAAe,CAAG,KAAKZ,IAAL,CAAUC,IAAV,CAAe,qCAAsCO,CAAtC,CAA6C,KAA5D,CAH0B,CAIlDd,CAAC,CAACa,CAAC,CAACE,aAAH,CAAD,CAAmBI,IAAnB,GACAnB,CAAC,CAACkB,CAAD,CAAD,CAAmBE,IAAnB,GACApB,CAAC,CAACiB,CAAD,CAAD,CAAWG,IAAX,EACH,CAPD,CASAhB,CAAQ,CAACQ,SAAT,CAAmBD,qBAAnB,CAA2C,SAAUE,CAAV,CAAa,IAC9CC,CAAAA,CAAI,CAAGd,CAAC,CAACa,CAAC,CAACE,aAAH,CAAD,CAAmBC,IAAnB,CAAwB,SAAxB,CADuC,CAE9CC,CAAO,CAAG,KAAKX,IAAL,CAAUC,IAAV,CAAe,4BAA6BO,CAA7B,CAAoC,KAAnD,CAFoC,CAG9CO,CAAa,CAAG,KAAKf,IAAL,CAAUC,IAAV,CAAe,mCAAoCO,CAApC,CAA2C,KAA1D,CAH8B,CAIpDd,CAAC,CAACa,CAAC,CAACE,aAAH,CAAD,CAAmBI,IAAnB,GACAnB,CAAC,CAACqB,CAAD,CAAD,CAAiBD,IAAjB,GACApB,CAAC,CAACiB,CAAD,CAAD,CAAWE,IAAX,EACH,CAPD,CAUAf,CAAQ,CAACQ,SAAT,CAAmBN,IAAnB,CAA0B,IAA1B,CAEA,MAAO,CAKHgB,YAAY,CAAE,sBAAUjB,CAAV,CAAkB,CAC5B,MAAO,IAAID,CAAAA,CAAJ,CAAaC,CAAb,CACV,CAPE,CASV,CAxDC,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n *\n * @author  2021 3iPunt <https://www.tresipunt.com/>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\n\ndefine([\n        'jquery',\n        'core/str',\n        'core/ajax',\n        'core/templates'\n    ], function ($, Str, Ajax, Templates) {\n        \"use strict\";\n\n        /**\n         *\n         */\n        let ACTION = {\n            EXPAND_BUTTON: '[data-action=\"expand\"]',\n            CONTRACT_BUTTON: '[data-action=\"contract\"]',\n        };\n\n        /**\n         * @constructor\n         * @param {String} region\n         */\n        function Comments(region) {\n            this.node = $(region);\n            this.node.find(ACTION.EXPAND_BUTTON).on('click', this.onExpandButtonClick.bind(this));\n            this.node.find(ACTION.CONTRACT_BUTTON).on('click', this.onContractButtonClick.bind(this));\n        }\n\n        Comments.prototype.onExpandButtonClick = function (e) {\n            const cmid = $(e.currentTarget).data('comment');\n            const comment = this.node.find('.comments[data-comment=\"' + cmid + '\"]');\n            const button_contract = this.node.find('.contract-comments[data-comment=\"' + cmid + '\"]');\n            $(e.currentTarget).hide();\n            $(button_contract).show();\n            $(comment).show();\n        };\n\n        Comments.prototype.onContractButtonClick = function (e) {\n            const cmid = $(e.currentTarget).data('comment');\n            const comment = this.node.find('.comments[data-comment=\"' + cmid + '\"]');\n            const button_expand = this.node.find('.expand-comments[data-comment=\"' + cmid + '\"]');\n            $(e.currentTarget).hide();\n            $(button_expand).show();\n            $(comment).hide();\n        };\n\n        /** @type {jQuery} The jQuery node for the region. */\n        Comments.prototype.node = null;\n\n        return {\n            /**\n             * @param {String} region\n             * @return {Comments}\n             */\n            initComments: function (region) {\n                return new Comments(region);\n            }\n        };\n    }\n);"],"file":"comments.min.js"}