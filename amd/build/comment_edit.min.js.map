{"version":3,"file":"comment_edit.min.js","sources":["../src/comment_edit.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n *\n * @author  2021 3iPunt <https://www.tresipunt.com/>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\n\ndefine([\n        'jquery',\n        'core/str',\n        'core/ajax',\n        'core/templates'\n    ], function ($, Str, Ajax, Templates) {\n        \"use strict\";\n\n        /**\n         *\n         */\n        let ACTION = {\n            EDIT_BUTTON: '[data-action=\"edit-comment\"]'\n        };\n\n        /**\n         *\n         */\n        let SERVICES = {\n            COMMENT_EDIT: 'theme_cbe_publication_comment_edit'\n        };\n\n        /**\n         * @constructor\n         * @param {String} region\n         * @param {Number} commentid\n         */\n        function CommentEdit(region, commentid) {\n            this.commentid = commentid;\n            this.node = $(region + '[data-commentid=\"' + commentid +'\"]');\n            this.node.find(ACTION.EDIT_BUTTON).on('click', this.onEditButtonClick.bind(this));\n        }\n\n        CommentEdit.prototype.onEditButtonClick = function (e) {\n\n            var comment = this.node.find('.textcomment').val().trim();\n            if (comment !== '') {\n                $(ACTION.EDIT_BUTTON).prop( \"disabled\", true );\n                const request = {\n                    methodname: SERVICES.COMMENT_EDIT,\n                    args: {\n                        commentid: this.commentid,\n                        comment: comment\n                    }\n                };\n                Ajax.call([request])[0].done(function(response) {\n                    location.reload();\n                }).fail(Notification.exception);\n            }\n        };\n\n        /** @type {jQuery} The jQuery node for the region. */\n        CommentEdit.prototype.node = null;\n\n        return {\n            /**\n             * @param {String} region\n             * @param {Number} commentid\n             *\n             * @return {CommentEdit}\n             */\n            initCommentEdit: function (region, commentid) {\n                return new CommentEdit(region, commentid);\n            }\n        };\n    }\n);"],"names":["define","$","Str","Ajax","Templates","ACTION","SERVICES","CommentEdit","region","commentid","node","find","on","this","onEditButtonClick","bind","prototype","e","comment","val","trim","prop","request","methodname","args","call","done","response","location","reload","fail","Notification","exception","initCommentEdit"],"mappings":";;;;;AAwBAA,gCAAO,CACC,SACA,WACA,YACA,mBACD,SAAUC,EAAGC,IAAKC,KAAMC,eAMnBC,mBACa,+BAMbC,sBACc,8CAQTC,YAAYC,OAAQC,gBACpBA,UAAYA,eACZC,KAAOT,EAAEO,OAAS,oBAAsBC,UAAW,WACnDC,KAAKC,KAAKN,oBAAoBO,GAAG,QAASC,KAAKC,kBAAkBC,KAAKF,cAG/EN,YAAYS,UAAUF,kBAAoB,SAAUG,OAE5CC,QAAUL,KAAKH,KAAKC,KAAK,gBAAgBQ,MAAMC,UACnC,KAAZF,QAAgB,CAChBjB,EAAEI,oBAAoBgB,KAAM,YAAY,OAClCC,QAAU,CACZC,WAAYjB,sBACZkB,KAAM,CACFf,UAAWI,KAAKJ,UAChBS,QAASA,UAGjBf,KAAKsB,KAAK,CAACH,UAAU,GAAGI,MAAK,SAASC,UAClCC,SAASC,YACVC,KAAKC,aAAaC,aAK7BzB,YAAYS,UAAUN,KAAO,KAEtB,CAOHuB,gBAAiB,SAAUzB,OAAQC,kBACxB,IAAIF,YAAYC,OAAQC"}